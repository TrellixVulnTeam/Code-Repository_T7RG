efd
from mem import myMemory
from mem import bit_vector

mem=myMemory(1,'KB')
mem.mem_status()
print(mem.uint32max,'Max Memory')
'''
class myint32():
    def __init__(self, value):
        if (value > mymem.uint32_max)
                raise exception
        self.p = mymem.store_int32(value, None)
        self.s = 4

    getv()
        return (mymem.load_int32(self.p))

    setv():
        store_int32(value, self.p)

    __str__():
        print (self.v);
'''
